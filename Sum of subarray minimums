class Solution {
    public int sumSubMins(int[] arr) {
        // code here
        int nse[]=nsefun(arr);
        int psee[]=pseefun(arr);
        int total=0;
        int n=arr.length;
        for(int i=0;i<n;i++)
        {
            int left=i-psee[i];
            int right=nse[i]-i;
            total+=left*right*arr[i];
        }
        return total;
    }
    public int[] nsefun(int arr[])
    {
        Stack<Integer> st=new Stack<>();
        int n=arr.length;
        int res[]=new int[arr.length]; 
        for(int i=arr.length-1;i>=0;i--)
        {
            while(!st.isEmpty() && arr[st.peek()]>=arr[i])
            {
                st.pop();
            }
            res[i]=st.isEmpty()?n:st.peek();
            st.push(i);
        }
        return res;
    }
     public int[] pseefun(int arr[])
    {
        Stack<Integer> st=new Stack<>();
        int n=arr.length;
        int res[]=new int[arr.length]; 
        for(int i=0;i<n;i++)
        {
            while(!st.isEmpty() && arr[st.peek()]>arr[i])
            {
                st.pop();
            }
            res[i]=st.isEmpty()?-1:st.peek();
            st.push(i);
        }
        return res;
    }
}
